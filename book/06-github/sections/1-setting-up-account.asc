===Усталяванне і канфігураванне рахунка

(((GitHub, рахунак карыстальніка)))
Першая рэч, якая вам патрэбна - усталяваць дармовы рахунак карыстальніка.

Проста адчыніце https://github.com[], абярыце імя карыстальніка, якое яшчэ ніхто не ўзяў, ўвядзіце емайл адрэсу і пароль, і націснеце вялікую зялёную кнопку "Зарэгіструйцеся ў GitHub'' .

.Форма рэгістрацыі  GitHub.

image::images/signup.png[Форма рэгістрацыі GitHub]

Наступная рэч, якую вы ўбачыце - гэта старонка цэнаўтварэння для планаў мадэрнізацыі, але пакуль яе можна ігнараваць. 

GitHub дашле вам емайл, каб спраўдзіць пададзеную вамі адрэсу.

Працягвайце далей, гэта вельмі важна(як мы ўбачым пазней).

[ЗАЦЕМКІ]
====
GitHub забяспечвае ўсімі функцыянальнасцямі бесплатнага рахунка, з тым абмежаваннем, што ўсе вашыя праекты цалкам даступны для ўсіх (кожны мае доступ для чытання).

GitHub's платны план змяшчае шэраг прыватных праектаў, але мы не будзем гаварыць пра гэта ў гэтай кнізе.

===

Калі вы націснеце на котку з васемью лапамі ў верхнім левым куце экрана, вы трапіце на сваю старонку панэлі з інструмэнтамі.

Цяпер вы можаце карыстацца GitHub.

==== Доступ SSH 

(((SSH ключы, з GitHub)))
З гэтага моманту , вы можаце падключыцца да сховішчаў Git, карыстаючыся `https://` protocol, з дапамогай імені карыстальніка і пароля, якія вы толькі што стварылі. 

Аднак, для таго, каб проста скланаваць праекты, вам не трэба праходзіць аўтэнтыфікацыю з дапамагой пароля і імя карыстальніка - рахунак, які мы толькі што стварылі, ўваходзіць ўва гульню, калі мы адгалінавалі праекты і запісалі змены у нашыя адгалінаванні троху пазней. 

Калі вы хочаце выкарыстоўваць удалёны SSH, вам патрэбна будзе сканфігураваць ваш паблік ключ .

(Калі вы яшчэ ім не карыстаецеся, глядзіце I<<_generate_ssh_key>>.)
Адчыніце наладкі вашага рахунка, карыстаючыся спасылкай у верхнім правых куце вакна:

.спасылка ``Наладкі рахунка'' .

image::images/account-settings.png[ Спасылка``Наладкі рахунка'' .]

Потым абярыце ``SSH ключы'' раздзел зьлева.

.``SSH ключы''спасылка.

image::images/ssh-keys.png[ ``SSH ключы'' спасылка.]

Адтуль, націсніце на кнопку  "`Дадаць SSH ключ`" , назавіце ваш ключ, устаўце змест вашага   `~/.ssh/id_rsa.pub` (ці як вы яго там назвалі) файла паблік ключа ў тэкставую вобласць, і націсніце   ``Дадаць ключ''.

[ЗАЦЕМКІ]
====
Будзьце пэўнымі, што вы запомнілі імя вашага SSH ключа.

Вы можаце даць імя кожнаму вашаму ключу (напрыклад, "Мой ноўтбук" альбо "Працоўны рахунак"), так што, калі вам патрэбна запусціць ключ пазьней, вы можаце лёгка сказаць, які дакладна вы шукаеце.

===

[[_асабісты_аватар]]
==== Ваш Аватар

Далей, калі вы хочаце, вы можаце замяніць аватар, які быў згенераваны для вас, сваім здымкам, які вы абярэце .

Спачатку трэба ісці на ўкладку "Прафайл" (над укладкай  Ключы SSH ) і націснусць   ``Запампаваць новы здымак''.

.Спасылка ``Прафайл'.

image::images/your-profile.png[Спасылка``Прафайл'']

Мы абяром копію лого Git, які знаходзіцца на нашым жорсткім дыску, і такім чынам мы можам абрэзаць яго.

.Абрэзка аватара
image::images/avatar-crop.png[Абрэжце ваш запампаваны аватар.]

Цяпер, дзе бы вы ні рабілі на сайце, людзі будуць бачыць ваш аватар побач з вашым імем карыстальніка.

Калі вы маеце запампаваны аватар на папулярным сервісе Gravatar (які часцяком выкарыстоўваецца для рахункаў Wordpress ), гэты аватар будзет выкарыстоваўвацца па змаўчанню, і вам не трэба рабіць тое першае дзеянне.

==== Вашая электронная адрэса

Спосаб, якім GitHub суадносі каміты Git вашаму карыстальніку, ёсць вашая электронная адрэса.

Калі вы выкарыстоўваеце некалькі электронных адрэсаў у вашых камітах, і вы хаціце, каб  GitHub звязываў іх правільна, вы мусіце дадаць усе электроныя адрэсы, якія вы выкарыстоўвалі, у адзел электроных адрэсаў адзела адміністратара.

[[_дадаць_эл_адрэсы]]
.Дадаць электронныя адрэсы
image::images/email-settings.png[Дадаць усе вашыя электроныя адрэсы.]

У <<_дадаць_эл_адрэсы>> мы можам бачыць некалькі розных мажлівых станаў.

Верхняя адрэса правераецца і ўсталёўваецца як галоўная адрэса. Гэта значыць, што менавіта на гэтую адрэсу вы будзеце атрымліваць усе паведамлення. 

Другая адрэса правераецца і можа быць усталявана, як галоўная, калі вы захочаце пераключыцца на яе.

Апошняя адрэса не правяраецца. Гэта азначае, што вы не можаце зрабіць яе галоўнай адрэсай.

Калі GitHub бачыць любое з гэтых паведамленій каміта ў любым сховішчы на сайце, яно цяпер будзе звязана з вашым карыстальнікам.

==== Дзьвух-фактарная аўтэнтыфікацыя

Нарэшце, для дадатковай бяспекі, вы мусіце канечне ўсталяваць "Дзьвух-фактарную аўтэнтыфікацыю альбо ``2FA''.

Дзьвух-фактарная аўтэнтыфікацыя - гэта механізм аўтэнтыфікацыі, які апошнім часам робіцца ўсё больш папулярным, каб  паменьшыць рызыку парушэння вашага рахунку, калі ваш пароль быў якім-кольвек чынам скрадзены.

Калі вы ўключыце гэты механізм, гэта прымусіць GitHub запытаць вас два розных спосаба аўтэнтыфікацыі, для каб, калі адзін з іх нарушаны, хакер не змог мець доступа да вашага рахунка. 

Вы можаце знайсці ўсталёўку Дзьвух-фактарнай Аўтэнтыфікацыі пад ўкладкай Бяспека наладак вашага рахунку. 

.2FA на ўкладцы "Бяспека"
image::images/2fa-1.png[2FA на ўкладцы "Бяспека"]

Калі вы клікнеце на кнопку "Усталяваць дзьвух-фактарную аўтэнтыфікацыю", вы трапіце на старонку канфігурацыі, дзе вы зможаце абраць выкарыстанне тэлефонных прыладаў  (app), каб згенераваць ваш другасны код  ( ``часовы, заснаваны на часовым пароле ''), альбо вы можаце выкарыстаць GitHub, каб вам быў дасланы код з дапамогай  SMS, кожны раз, калі вам патрэбна ўвайсці ў сістэму. 

Пасля таго, як вы абралі спосаб, які найбольш падабаецца, і сьледуеце інструкцыям для ўсталявання 2FA (дзьвух-фактарнай аўтэнтыфікацыі, ваш рахунка будзе троху больш бясьпечным, і вы мусіце забяспечыць код у дадатак да вашага пароля, калі бы вы не ўваходзілі ў сістэму GitHub.

