=== Стварэнне і наладжванне рахунка

(((GitHub, user accounts)))
Першая, што трэба зрабіць - стварыць дармовы рахунак карыстальніка.

Проста адчыніце https://github.com[], абярыце назву рахунка, якой яшчэ ніхто не ўзяў, ўвядзіце адрас электронной пошты і пароль, і націсніце вялікую зялёную кнопку "Sign up for GitHub'" .

.Форма рэгістрацыі  GitHub.
image::images/signup.png[Форма рэгістрацыі GitHub]

На наступнай старонцы вы пабачыце кошты платных рахункаў, але пакуль можаце не зважаць на гэта.
GitHub дашле вам электронны ліст, каб спраўдзіць пададзены вамі адрас.
Працягнем, наступная інфармацыя вельмі важная(як мы ўбачым пазней).

[NOTE]
====
Дармовы рахунак GitHub дае вам ўсе даступныя магчымасьці, але кожны будзе мець мажлівасьць праглядзець змесьціва вашых праектаў.
Платныя рахункі могут змяшчаць прыватныя праекты (недаступныя для астатніх), але мы не будзем гаварыць пра іх ў гэтай кнізе.
===

Калі вы націснеце на лагатып сайта (octocat) ў верхнім левым куце экрана, вы трапіце на сваю галоўную старонку. 
Цяпер вы можаце карыстацца GitHubʼам.

==== Доступ праз SSH 

(((SSH keys, with GitHub)))
З гэтага моманту , вы можаце падлучыцца да сховішчаў Git, карыстаючыся праз `https://` пратакол, з дапамогай назвы рахунка і пароля, якія вы толькі што стварылі. 
Аднак, каб проста скланаваць праекты, вам нават не трэба рэгістравацца на сайце - рахунак, які мы стварылі, пачынае дзейнічаць, як толькі мы зрабілі форк (fork) праекту і запісалі змены ў наш праект. 

Калі вы хочаце карыстацца адлеглым SSH, вам трэба стварыць адкрыты ключ.
(Калі ў вас яго яшчэ няма, глядзіце <<_generate_ssh_key>>.)
Адчыніце налады вашага рахунка, з дапамогай спасылкі ў верхнім правым куце акна:

.Спасылка на ``Налады рахунка''.
image::images/account-settings.png[ Спасылка на ``Налады рахунка''.]

Потым выбярыце зьлева раздзел ``SSH keys''.

.Спасылка на ``SSH keys''.
image::images/ssh-keys.png[ Спасылка на ``SSH keys''.]
А цяпер націсніце на кнопку  "`Add an SSH key`" , упішыце назву вашага ключа, устаўце змест файла з адкрытым ключом  (`~/.ssh/id_rsa.pub`, ці як вы ягоназвалі) ў тэкставую вобласць, і націсніце ``Add key''.

[NOTE]
====
Пераканайцеся, што вы запомнілі назву вашага SSH ключа.Вы можаце назваць кожны ключ (напрыклад, "Мой ноўтбук" альбо "Працоўны рахунак"), таму, калі вам пазьней спатрэбіцца скасаваць ключ, вы лёгка яго знойдзеце.
====

[[_personal_avatar]]
==== Ваш Аватар

Калі вы хочаце, вы можаце памяняць аўтаматычна створаны аватар свой здымак.
Спачатку трэба прайсці ў раздзел "Profile" (над раздзелам  Ключы SSH ) і націснусць ``Запампаваць новы здымак''.

.Спасылка на ``Profile''.
image::images/your-profile.png[Спасылка на``Profile'']

Мы абяром копію лагатыпа Git, якая ляжыць на нашым дыску. Потым мы можам яго абрэзаць.

.Абрэзка аватара
image::images/avatar-crop.png[Абрэжце ваш аватар.]

Цяпер паўсюль на сайце людзі будуць бачыць ваш аватар побач з назвай вашага рахунка.

Калі ў вас ёсць запампаваны аватар на папулярным сервісе Gravatar (які часцяком выкарыстоўваецца для рахункаў Wordpress), то гэты аватар адлюструецца на вашай старонцы без папярэдніх крокаў.

==== Адрас вашай электроннай пошты

З дапамогай электронай пошты GitHub разумее, якому карыстальніку належыць пэўная рэвізія.
Калі вы карыстаецеся некалькамі электроннымі адрасамі ў вашых рэвізіях, і вы хочаце, каб  GitHub звязываў іх правільна, вы павінны дадаць усе электронныя адрасы, якімі вы карыстаецеся, у раздзел emails наладах вашага рахунку.

[[_add_email_addresses]]
.Дадаванне электронных адрасоў
image::images/email-settings.png[Дадаць усе вашыя электронныя адрасы.]

На <<_add_email_addresses>> мы можам бачыць розныя ўласьцівасьці адрасоў электроннай пошты.
Адрас зверху зверыфікаваны і пазначаны як галоўны адрас (primary). Гэта значыць, што на гэты адрас будут прыходзіць усе апавяшчэнні. 
Другі адрас зверыфікаваны і можа стаць галоўным, калі вы гэтага захочаце.
Апошні адрас не верыфікаваны, таму вы не можаце зрабіць яго галоўным.
Калі GitHub бачыць хоць які з гэтых адрасоў у рэвізіях сховішчаў на сайце, яны цяпер будуць звязаны з вашым рахункам.

==== Дзвухфактарная аўтэнтыфікацыя

Нарэшце, для дадатковай бяспекі, вам, безумоўна, варта скарыстаць Дзвухфактарную аўтэнтыфікацыю або ``2FA''.
Дзвухфактарная аўтэнтыфікацыя - гэта механізм аўтэнтыфікацыі, які апошнім часам робіцца ўсё больш папулярны, каб паменьшыць рызыку парушэння доступа да вашага рахунка, калі ваш пароль быў скрадзены.
Уключэнне гэтай магчымасці прымусіць GitHub прасіць вас пацьвердзіць сапраўднасць вашай асобы, каб злачынец не атрымаў доступу да вашага рахунка.
 
Вы можаце знайсці налады Дзвухфактарнай Аўтэнтыфікацыі ў раздзеле Security (Бяспека) у наладах вашага рахунку.

.2FA на разделе Security (Бяспека)
image::images/2fa-1.png[2FA на раздзеле Security (Бяспека)]

Калі вы націсніце на кнопку ``Set up two-factor authentication'', вы трапіце на старонку наладаў, дзе з дапамогай праграмы на тэлефоне (app), каб згенераваць другасны код  (``часовы аднаразовы пароль''), ці вы можаце атрымліваць код ад GitHub праз SMS для кожнага ўваходу на сайт.

Пасля таго, як вы выбралі і наладзілі метад 2FA (дзвухфактарнай аўтэнтыфікацыі), вам трэба будзе ўводзіць код разам з паролем для кожнага ўвахаду на GitHub.

